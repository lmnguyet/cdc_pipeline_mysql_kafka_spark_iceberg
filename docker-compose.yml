services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    hostname: mysql
    restart: always
    env_file:
      - envs/mysql.env
    ports:
      - 3306:3306
    volumes:
      - mysql_data:/var/lib/mysql
      - ./dataset:/var/lib/mysql-files
      - ./init_db_scripts:/docker-entrypoint-initdb.d
    command: --local_infile=1
    networks:
      - my-network
  
  zookeeper:
    image: quay.io/debezium/zookeeper:3.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    networks:
      - my-network

  kafka:
    image: quay.io/debezium/kafka:3.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    env_file:
      - envs/kafka.env
    networks:
      - my-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - 9089:8080
    env_file:
      - envs/kafka.env
    networks:
      - my-network

  minio:
    image: quay.io/minio/minio
    hostname: minio
    container_name: minio
    ports:
     - 9000:9000
     - 9001:9001
    env_file:
      - envs/minio.env
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - my-network  
  
  connector:
    build:
      context: ./connector
      dockerfile: ./Dockerfile
    container_name: connector
    depends_on:
      - kafka
      - mysql
      - minio
    ports:
      - 8083:8083
    env_file:
      - envs/connector.env
    networks:
      - my-network

  hive-metastore:
    hostname: hive-metastore
    container_name: hive-metastore
    image: bitsondatadev/hive-metastore:latest
    ports:
      - 9083:9083
    volumes:
      - ./hive/metastore-site.xml:/opt/apache-hive-metastore-3.0.0-bin/conf/metastore-site.xml:ro
    environment:
      METASTORE_DB_HOSTNAME: mysql
    depends_on:
      - mysql
    networks:
      - my-network

  spark-master:
    build: 
      context: ./spark
      dockerfile: ./Dockerfile
    container_name: spark-master
    env_file:
      - envs/spark-master.env
    ports:
      - 7077:7077
      - 8080:8080
    volumes:
      - ./spark/spark-defaults.conf:/tmp/spark-defaults.conf
      - ./spark/jobs:/tmp/jobs
      - spark_home:/opt/bitnami/spark
      # - ./spark/jobs:/opt/bitnami/spark/jobs
      # - ./spark/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
    # depends_on:
    #   - connector
    #   - hive-metastore
    entrypoint: bash -c "cp /tmp/spark-defaults.conf /opt/bitnami/spark/conf/spark-defaults.conf && cp -r /tmp/jobs /opt/bitnami/spark/ && /opt/bitnami/spark/sbin/start-master.sh && tail -f /dev/null"
    networks:
      - my-network

  spark-worker:
    image: docker.io/bitnami/spark:3.5
    container_name: spark-worker
    env_file:
      - envs/spark-worker.env
    volumes:
      - ./spark/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
    depends_on:
      - spark-master
    networks:
      - my-network

  trino:
    hostname: trino
    image: trinodb/trino:388
    container_name: trino
    ports:
      - 8081:8080
    volumes:
      - ./trino:/etc/trino
    depends_on:
      - hive-metastore
      - minio
    networks:
      - my-network

  superset:
    image: superset-img
    container_name: superset
    env_file:
      - envs/superset.env
    ports:
      - 8088:8088
    volumes:
      - ./superset/superset-init.sh:/app/superset-init.sh
    depends_on:
      - trino
    networks:
      - my-network 
  
  fast-api:
    image: fastapi-img
    container_name: fast-api
    env_file:
      - envs/fastapi.env
    ports:
      - 8000:8000
    volumes:
      - ./fastapi/app/main.py:/app/main.py
    depends_on:
      - trino
    networks:
      - my-network

volumes:
  mysql_data:
  minio_data:
  spark_home:
    external: true

networks:
  my-network:
    external: true
    driver: bridge
    name: my-network